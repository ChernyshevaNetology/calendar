{"version":3,"sources":["App.tsx","constants.ts","Calendar.tsx","index.tsx"],"names":["prev","current","next","weekdays","short","long","Calendar","currentYear","currentDate","weekDay","genitiveMonth","nominativeMonth","final","className","Object","values","map","scope","week","i","date","isCurrentMonth","dateClass","cn","parseInt","now","Date","format","locale","ru","numberOfDays","lastDayOfMonth","numberOfDaysMonthPrev","sub","months","lastDayMonthPrev","weekDayStart","startOfMonth","weekDayStartNum","datesArray","Array","keys","slice","reduce","acc","prevDates","splice","nextMonthDates","datesToRender","length","push","App","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f75f1dac.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport \"./App.css\";\nimport { Calendar } from \"./Calendar\";\nimport { lastDayOfMonth, startOfMonth, format, sub } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport { DatesArray } from \"types\";\n\nconst now = new Date();\n\nconst currentYear = format(new Date(now), \"y\");\nconst genitiveMonth = format(new Date(now), \"MMMM\", { locale: ru });\nlet nominativeMonth = format(new Date(now), \"LLLL\", { locale: ru });\nconst weekDay = format(new Date(now), \"eeee\", { locale: ru });\nconst currentDate = format(new Date(now), \"d\");\nconst numberOfDays = format(lastDayOfMonth(new Date(now)), \"d\");\n\n// getting last day of the month and number of days in prev month\nconst numberOfDaysMonthPrev = sub(new Date(now), { months: 1 });\nconst lastDayMonthPrev = format(lastDayOfMonth(numberOfDaysMonthPrev), \"d\");\n\n// Getting the weekday for start of month\nconst weekDayStart = startOfMonth(now);\nconst weekDayStartNum = parseInt(format(new Date(weekDayStart), \"i\")) - 1;\n\nconst datesArray = [...new Array(parseInt(numberOfDays) + 1).keys()]\n  .slice(1)\n  .reduce(\n    (acc: DatesArray[], date): DatesArray[] => [\n      ...acc,\n      { date: date, isCurrentMonth: true },\n    ],\n    []\n  );\n\nconst prevDates = [...new Array(parseInt(lastDayMonthPrev) + 1).keys()]\n  .slice(1)\n  .splice(-weekDayStartNum)\n  .reduce(\n    (acc: DatesArray[], date: number): DatesArray[] => [\n      ...acc,\n      { date: date, isCurrentMonth: false },\n    ],\n    []\n  );\n\nconst nextMonthDates = [...new Array(10).keys()]\n  .slice(1)\n  .reduce(\n    (acc: DatesArray[], date: number): DatesArray[] => [\n      ...acc,\n      { date: date, isCurrentMonth: false },\n    ],\n    []\n  );\n\nconst getAllDates = (\n  prev: DatesArray[],\n  current: DatesArray[],\n  next: DatesArray[]\n): DatesArray[] => {\n  if (weekDayStartNum === 0) {\n    return [...current, ...next];\n  } else {\n    return [...prev, ...current, ...next];\n  }\n};\n\nconst datesToRender: DatesArray[] = getAllDates(\n  prevDates,\n  datesArray,\n  nextMonthDates\n);\n\nconst final: DatesArray[][] = [];\n\nfor (let i = 0; i < datesToRender.length; i++) {\n  final.push(datesToRender.splice(0, 7));\n}\n\nconst App: FC = () => {\n  return (\n    <Calendar\n      currentYear={currentYear}\n      currentDate={currentDate}\n      weekDay={weekDay}\n      genitiveMonth={genitiveMonth}\n      nominativeMonth={nominativeMonth}\n      final={final}\n    />\n  );\n};\n\nexport default App;\n","export const weekdays = [\n  { short: \"Пн\", long: \"Понедельник\" },\n  { short: \"Вт\", long: \"Вторник\" },\n  { short: \"Ср\", long: \"Среда\" },\n  { short: \"Чт\", long: \"Четверг\" },\n  { short: \"Пт\", long: \"Пятница\" },\n  { short: \"Сб\", long: \"Суббота\" },\n  { short: \"Вс\", long: \"Воскресенье\" },\n] as const;\n","import React, { FC } from \"react\";\nimport cn from \"classnames\";\nimport { weekdays } from \"./constants\";\nimport { Props } from \"types\";\n\nconst Calendar: FC<Props> = ({\n  currentYear,\n  currentDate,\n  weekDay,\n  genitiveMonth,\n  nominativeMonth,\n  final,\n}) => {\n  return (\n    <div className=\"ui-datepicker\">\n      <div className=\"ui-datepicker-material-header\">\n        <div className=\"ui-datepicker-material-day\">{weekDay}</div>\n        <div className=\"ui-datepicker-material-date\">\n          <div className=\"ui-datepicker-material-day-num\">{currentDate}</div>\n          <div className=\"ui-datepicker-material-month\">{genitiveMonth}</div>\n          <div className=\"ui-datepicker-material-year\">{currentYear}</div>\n        </div>\n      </div>\n      <div className=\"ui-datepicker-header\">\n        <div className=\"ui-datepicker-title\">\n          <span className=\"ui-datepicker-month\">{nominativeMonth}</span>\n          &nbsp;\n          <span className=\"ui-datepicker-year\">{currentYear}</span>\n        </div>\n      </div>\n      <table className=\"ui-datepicker-calendar\">\n        <colgroup>\n          <col />\n          <col />\n          <col />\n          <col />\n          <col />\n          <col className=\"ui-datepicker-week-end\" />\n          <col className=\"ui-datepicker-week-end\" />\n        </colgroup>\n        <thead>\n          <tr>\n            {Object.values(weekdays).map(({ short }) => (\n              <th key={short} scope=\"col\">\n                {short}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {final.map((week, i) => (\n            <tr key={i}>\n              {week.map(({ date, isCurrentMonth }) => {\n                const dateClass = cn({\n                  \"ui-datepicker-today\": date === parseInt(currentDate),\n                  \"ui-datepicker-other-month\": !isCurrentMonth,\n                });\n                return (\n                  <td key={date} className={dateClass}>\n                    {date}\n                  </td>\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport { Calendar };\n","import React from 'react';\nimport {render} from 'react-dom';\nimport App from './App';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}